/* Global Vars */
:root {
  /* Colors */
  --colorA1: hsl(281, 55%, 37%);
  --colorA2: hsl(281, 73%, 55%);
  --colorC: hsl(116, 74%, 52%);
  --colorC50: hsla(116, 74%, 52%, 50%);
  --colorB1: hsl(7, 84%, 32%);
  --colorB2: hsl(7, 76%, 50%);

  --bg-color: hsl(0, 0%, 22%);
  --bg-color2: hsl(0, 0%, 32%);
  --text-color: hsl(0, 0%, 91%);
  --link-color: hsl(36, 92%, 59%);

  /* Sizes */
  --canvas-size: 300;

  /* Shadows */
  --section-shadow: 2px 2px 1px black, -2px -2px 1px var(--colorC50);

  /* Borders */
  --section-border: 1px solid black;
}

/* #region Universal element rules */
a {
  color: var(--link-color);
}

html {
  height: 100vh;
  width: 100vw;
  position: fixed;
  overflow-y: scroll;

  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

html::-webkit-scrollbar {
  display: none;
}

body {
  background-color: var(--bg-color);
  color: var(--text-color);
  height: 100%;
  width: 100%;

  font-family: Arial, Helvetica, sans-serif;
}

.canvas-container {
  display: grid;
  grid-template: 1fr / 1fr;
  width: fit-content;
  height: fit-content;
}

.canvas-container > * {
  grid-row: -1 / 1;
  grid-column: -1 / 1;
}

.icon.inactive {
  filter: grayscale(80%) brightness(50%);
}

.section {
  box-shadow: var(--section-shadow);
  border: var(--section-border);
}

.section,
.title {
  max-width: 900px;
  min-width: 600px;
}
/* #endregion */

/* #region loading-screen */
.loading-screen {
  transition: transform 0.3s ease-in-out;
}

.loading-screen.hidden {
  transform: translateY(200%);
}

/* #endregion */

/* #region main-content */
.main-content {
  display: grid;
  grid-template: repeat(20, 5%) / repeat(20, 5%);
  position: relative;

  height: 100%;
  width: 100%;
}

/* title grid */
.title {
  grid-column: 3 / 19;
  grid-row: 2 / 6;
  display: grid;
  place-items: center;

  transition: transform 0.8s ease-in-out;

  background-color: var(--bg-color2);
  border-radius: 20px;
  width: 100%;

  justify-self: center;
}

.title-text {
  display: flex;
  justify-content: center;
  text-align: center;
  font-size: 4.8rem;
  font-weight: bold;
  text-shadow: 2px 2px 2px var(--colorB1);
  color: var(--colorB2);

  transition: font-size 0.8s ease-in-out;
}

.title.shrink {
  transform: translateY(-200%);
}

.title.shrink .title-text {
  font-size: 3.5rem;
}
/* #region menu section */
.menu {
  grid-column: 3 / 19;
  grid-row: 8 / 18;

  display: grid;
  grid-template: 5% min-content 5% 1fr 5% 1fr 5% 1fr / 1fr;
  place-items: center;
  grid-template-areas:
    "."
    "credits"
    "."
    "start-game"
    "."
    "ai-match"
    "."
    "options";

  transition: transform 0.3s ease-in-out;

  background-color: var(--colorA1);
  border-radius: 20px;

  width: 100%;
  min-height: 275px;

  justify-self: center;
}

.menu.hidden {
  transform: translateX(-200%);
}

.menu .credits {
  grid-area: credits;
}

.menu .start {
  grid-area: start-game;
  align-self: end;
}

.menu .ai-match {
  grid-area: ai-match;
}

.menu .options {
  grid-area: options;
  align-self: start;
}

.menu .start-btn,
.menu .options-btn,
.menu .ai-match-btn {
  height: 60px;
  width: 180px;

  font-size: 1.3rem;
  font-weight: bold;
  color: var(--text-color);
  transition: text-shadow 0.1s ease-in-out;

  background-color: var(--colorA2);
  border: 2px solid var(--colorC);
  border-radius: 10px;
}

.menu .start-btn:hover,
.menu .options-btn:hover,
.menu .ai-match-btn:hover {
  text-shadow: 2px 2px 1px var(--colorC), -2px -2px 1px var(--colorB2);
}

.menu .ai-match-btn.active {
  background-color: var(--colorB1);
}

/* #endregion */

/* #region placement section */
.placement {
  grid-column: 3 / 19;
  grid-row: 2 / 20;

  display: grid;
  grid-template: 5% min-content 1fr min-content 1fr min-content 5% min-content 5% / 1fr 5% 1fr;
  place-items: center;
  grid-template-areas:
    ". . ."
    "instructions instructions instructions"
    ". . ."
    "ships ships ships"
    ". . . "
    "random . rotate"
    ". . ."
    "canvas canvas canvas";

  transition: transform 0.3s ease-in-out;

  background-color: var(--colorA1);
  border-radius: 20px;

  width: 100%;
  min-height: 650px;

  justify-self: center;
}

.placement .instructions {
  grid-area: instructions;
}

.placement .instructions-text {
  font-size: 2.3rem;
  font-weight: bold;
  text-shadow: 1px 1px 1px var(--bg-color);
}

.placement .ships-to-place {
  grid-area: ships;
  display: grid;
  grid-template: 5% 1fr 10% min-content / 10% repeat(5, 1fr) 10%;
  grid-template-areas:
    ". . . . . . ."
    ". sp at vm ig l ."
    ". . . . . . ."
    ". n n n n n .";
}

.ships-to-place .ship {
  display: grid;
  place-items: center;
}

.ships-to-place .icon {
  width: 90%;
}

.ships-to-place .ship-name {
  grid-area: n;
  display: grid;
  place-items: center;

  font-size: 1.5rem;
  font-weight: bold;
}

.ships-to-place .ship-one {
  grid-area: sp;
}

.ships-to-place .ship-two {
  grid-area: at;
}

.ships-to-place .ship-three {
  grid-area: vm;
}

.ships-to-place .ship-four {
  grid-area: ig;
}

.ships-to-place .ship-five {
  grid-area: l;
}

.placement .random-ships {
  grid-area: random;
  justify-self: end;
}

.placement .rotate {
  grid-area: rotate;
  justify-self: start;
}

.placement .rotate-btn,
.placement .random-ships-btn {
  height: 60px;
  width: 180px;

  font-size: 1.3rem;
  font-weight: bold;
  color: var(--text-color);
  transition: text-shadow 0.1s ease-in-out;

  background-color: var(--colorA2);
  border: 2px solid var(--colorC);
  border-radius: 10px;
}

.placement .rotate-btn:hover,
.placement .random-ships-btn:hover {
  text-shadow: 2px 2px 1px var(--colorC), -2px -2px 1px var(--colorB2);
}

.placement .rotate-btn:active,
.placement .random-ships-btn:active {
  text-shadow: 4px 4px 1px var(--colorC), -4px -4px 1px var(--colorB2);
}

.placement .placement-canvas-container {
  grid-area: canvas;
  align-self: start;
}

.placement.hidden {
  transform: translateY(200%);
}

.placement .canvas-container {
  background-color: var(--colorC);
}
/* #endregion */

/* #region game section */
.game {
  grid-column: 2 / 20;
  grid-row: 3 / 20;
  display: grid;
  place-items: center;
  grid-template:
    repeat(2, minmax(10px, 1fr) min-content) minmax(10px, 1fr)
    min-content 1fr / repeat(4, 1fr);
  grid-template-areas:
    ". . . ."
    ". log log ."
    ". . . ."
    "user-board user-board ai-board ai-board"
    ". . . ."
    "user-info user-info ai-info ai-info"
    ". . . .";

  transition: transform 0.3s ease-in-out;

  background-color: var(--colorA1);
  border-radius: 20px;

  min-height: 600px;

  justify-self: center;
}

.game .canvas-container {
  background-color: var(--colorA2);
}

.game .user-canvas-container {
  grid-area: user-board;
}

.game .ai-canvas-container {
  grid-area: ai-board;
}

.game .info {
  display: grid;
  grid-template: min-content 10px 1fr / 5% repeat(5, 1fr) 5%;
  grid-template-areas:
    ". n n n n n ."
    ". . . . . . ."
    ". sp at vm ig l .";

  place-items: center;
}

.info .name {
  grid-area: n;

  font-size: 1.3rem;
  font-weight: bold;
}

.info .ship {
  display: grid;
  place-items: center;
}

.info .icon {
  width: 80%;
}

.info .ship-one {
  grid-area: sp;
}

.info .ship-two {
  grid-area: at;
}

.info .ship-three {
  grid-area: vm;
}

.info .ship-four {
  grid-area: ig;
}

.info .ship-five {
  grid-area: l;
}

.game .user-info {
  grid-area: user-info;
}

.game .ai-info {
  grid-area: ai-info;
}

.game .player-ships {
  display: grid;
  grid-auto-flow: column;
}

.game .log {
  grid-area: log;
  display: grid;
  grid-template: 1fr / min-content 10px 1fr;
  grid-template-areas: "scene . text";

  width: 500px;

  border: 3px solid var(--colorB1);
  border-radius: 6px;

  background-color: var(--bg-color);
}

.game .log .scene {
  grid-area: scene;

  height: 150px;
  width: 150px;
  background-color: var(--colorB1);
}

.game .log .scene-img {
  height: 100%;
  width: 100%;
}

.game .log .log-text {
  grid-area: text;
  font-size: 1.15rem;
  white-space: pre; /* Allows for \n */
}

.game.hidden {
  transform: translateX(200%);
}
/* #endregion */

/* #region Reset */
.reset {
  grid-column: 9 / 13;
  grid-row: 1 / 3;

  display: grid;

  place-items: center;

  height: 90%;
  max-height: 60px;
  width: 90%;
  max-width: 180px;
  place-self: center;

  transition: transform 0.3s ease-in-out;
}

.reset .reset-btn {
  height: 100%;
  width: 100%;

  font-size: 1.3rem;
  font-weight: bold;
  color: var(--text-color);
  transition: text-shadow 0.1s ease-in-out;

  background-color: var(--colorA2);
  border: 2px solid var(--colorC);
  border-radius: 10px;
}

.reset .reset-btn:hover {
  text-shadow: 2px 2px 1px var(--colorC), -2px -2px 1px var(--colorB2);
}

.reset .reset-btn:active {
  text-shadow: 4px 4px 1px var(--colorC), -4px -4px 1px var(--colorB2);
}

.reset.hidden {
  transform: translateY(-200%);
}

/* #endregion */

/* #endregion */
